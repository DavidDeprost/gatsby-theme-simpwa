@import 'vars';


body {
  min-height: 100vh;
  max-width: 100vw;
  margin: 0;
  font-size: var(--font-size);
  overflow: hidden; // Disable scrolling on body
}

// Style in common for sidebars and main area:
#layout {
  display: flex;

  .header {
    position: relative;
    height: var(--header-height);
    background: var(--bg-header);
    color: var(--fg-header);
    border-bottom: var(--border-width) solid var(--bg-border);
    .title {
      position: absolute;
      left: 0;
      right: 0;
      margin: 0;
      box-sizing: border-box;
      height: 100%; // Required to prevent overflow!
      line-height: var(--header-height); // Vertical center
      text-align: center; // Horizontal center
      font-size: var(--header-font-size);
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  .content {
    /* Without border-box, the left/right padding is added
    to the 100% width, resulting in overflowing content! */
    box-sizing: border-box;
    height: calc(100vh - var(--header-height));
    padding: var(--padding-content-sidebars);
    overflow: auto;
    background: var(--bg-content);
    color: var(--fg-content);

    // Scrollbar styling:
    &::-webkit-scrollbar {
      width: 0.6rem;
      background: transparent;
    }
    &::-webkit-scrollbar-thumb {
      background: var(--bg-scrollbar);
      border-radius: 0.6rem;
    } // Hide overflowing sidebar scrollbars on Mac Firefox:
    scrollbar-width: var(--scrollbar-width);
  }
}

// Main area specific style:
#main {
  // min-width: 0;
  // background: var(--bg-content);
  // color: var(--fg-content);

  .header {
    @media (orientation: landscape) {
      .title {
        transition: left var(--secs), right var(--secs);
        &.left-closed-landscape { left: var(--header-height); }
        &.right-closed-landscape { right: var(--header-height); }
      }
    }
  }

  @media (orientation: portrait) {
    /// Mock background layers to hide the portrait sidebars by clicking
    /// in the background; 2 layers are provided so dark themes can first
    /// be darkened (to darken their lighter elements), and then lightened
    /// so they are distinguished from the rest of the theme.
    .mock-bg-white {
      /// Top mock background layer which is used for clicking,
      /// and coloring white-transparent.
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      min-height: 120vh; // Fix chrome mobile bug due to address bar
      background: hsla(0, 0%, 100%, var(--white-overlay-transparency));
      z-index: 5;
      cursor: pointer;
    }
    .mock-bg-black {
      /// Bottom mock background layer which is used for coloring black-transparent.
      /// Click events are triggered on the above layer.
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      min-height: 120vh; // Fix chrome mobile bug due to address bar
      z-index: 4;
      background: hsla(0, 0%, 0%, var(--black-overlay-transparency));
    }
    .visible { visibility: visible; }
    .invisible { visibility: hidden; }
  }
}

// Style in common for both sidebars:
#left, #right {
  z-index: 10;
  width: 0;
  // Landscape ONLY transition:
  transition: width var(--secs);
  @media (orientation: landscape) {
    &.open { width: calc(1% * var(--landscape-width)); }
  }

  .icon {
    // @media (hover: hover) { -> Prevents hover effects on touch devices,
    // but it also prevents desktop Linux Firefox from accessing :hover effects (bug!)
    // => We create a .canHover class that does work on desktop Linux Firefox:
    &.canHover:hover {
      cursor: pointer;
      --bg-icon: var(--bg-icon-hover);
      --fg-icon: var(--fg-icon-hover);
      --bg-shadow: var(--bg-shadow-hover);
      --bg-border: var(--bg-border-hover);
    }

    // Square icon div:
    .icon-square {
      position: fixed;
      z-index: 100;
      width: var(--header-height);
      height: var(--header-height);
      line-height: var(--header-height);
      font-size: calc(var(--header-height) / 3 + 0.25rem);
      border-bottom: var(--border-width) solid var(--bg-border);
      background: var(--bg-icon);
      color: var(--fg-icon);
      text-align: center;
      user-select: none;
      cursor: pointer;
    }
  }

  .sidebar {
    // Portrait AND landscape transitions:
    transition: transform var(--secs);
    @media (orientation: portrait) { width: var(--portrait-width); }
    @media (orientation: landscape) { width: calc(1vw * var(--landscape-width)); }
    .header {
      width: calc(100% - var(--header-height));
    }
  }
}

// Left sidebar specific style:
#left {
  --landscape-width: var(--landscape-width-left);
  .icon-square {
    left: 0;
    border-right: var(--border-width) solid var(--bg-border);
  }
  .sidebar {
    border-right: var(--border-width) solid var(--bg-border);
    // Left portrait AND landscape transition:
    &.closed { transform: translateX(-100%); }
    .header { left: var(--header-height); }
  }
}

// Right sidebar specific style:
#right {
  --landscape-width: var(--landscape-width-right);
  .icon-square {
    right: 0;
    border-left: var(--border-width) solid var(--bg-border);
  }
  .sidebar {
    border-left: var(--border-width) solid var(--bg-border);
    @media (orientation: portrait) {
      // Right portrait transition ONLY:
      &.open { transform: translateX(-100%); }
    }
  }
}






/*
.sidebar {
  background: var(--bg-content);
  width: var(--sidestrip-width);
  transition: width var(--transition-duration);
  --scrollbar-width: none;
  --sidestrip-border-width: var(--border-width);

  &.left {
    border-right: var(--sidestrip-border-width) solid var(--bg-border);
    &.activeLandscape {
      @media (orientation: landscape) {
        border-right: var(--border-width) solid var(--bg-border);
        box-shadow: var(--shadow) var(--bg-shadow);
        width: var(--sb-landscape-width-left);
        --scrollbar-width: auto;
      }
    }
  }
  &.right {
    border-left: var(--sidestrip-border-width) solid var(--bg-border);
    &.activeLandscape {
      @media (orientation: landscape) {
        border-left: var(--border-width) solid var(--bg-border);
        box-shadow: var(--shadow) var(--bg-shadow);
        width: var(--sb-landscape-width-right);
        --scrollbar-width: auto;
      }
    }
  }
  &.sidestripOff {
    --sidestrip-width: 0rem;
    --sidestrip-border-width: 0px;
  }
}

@media (orientation: portrait) {
  /// In portrait mode the active sidebar should cover the main content,
  /// so styling is different from landscape mode:
  .portraitSidebar {
    position: fixed;
    z-index: 30;
    width: var(--sb-portrait-width);
    background: var(--bg-content);

    --offset: calc(-1 * var(--sb-portrait-width) - var(--border-width));
    &.left {
      &.activePortrait {
        left: 0;
      }
      left: var(--offset);
      transition: left var(--transition-duration);
      border-right: var(--border-width) solid var(--bg-border);
    }
    &.right {
      &.activePortrait {
        right: 0;
      }
      right: var(--offset);
      transition: right var(--transition-duration);
      border-left: var(--border-width) solid var(--bg-border);
    }
  }

  /// Mock background layers to hide the sidebar by clicking on it:
  /// 2 layers are provided so dark themes can first be darkened (to darken their lighter elements),
  /// and then lightened so they are distinguished from the rest of the theme.
  .mock-portrait-bg {
    /// Top mock background layer which is used by default for clicking.
    /// Will be completely transparent on non-dark themes and white-transparent on dark themes.
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    min-height: 120vh; // Fix chrome mobile bug due to address bar
    background: hsla(0, 0%, 100%, var(--white-overlay-transparency));
    z-index: 20;
    visibility: hidden;
    &.activePortrait {
      visibility: visible;
      cursor: pointer;
    }
  }
  .mock-portrait-bg-sub {
    /// Bottom mock background layer which is used by default for coloring black-transparent.
    /// Click events are triggered on the above layer.
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    min-height: 120vh; // Fix chrome mobile bug due to address bar
    z-index: 19;
    background: hsla(0, 0%, 0%, var(--black-overlay-transparency));
    visibility: hidden;
    &.activePortrait {
      visibility: visible;
    }
  }
}

/// Represents the inactive, hoverable sidebar that triggers activation by clicking on it:
.hoverbar {
  // @media (hover: hover) { -> Prevents hover effects on touch devices,
  // but it also prevents desktop Linux Firefox from accessing :hover effects (bug!)
  // => We create a .canHover class that does work on desktop Linux Firefox:
  &.canHover:hover {
    cursor: pointer;
    --bg-icon: var(--bg-icon-hover);
    --fg-icon: var(--fg-icon-hover);
    --bg-shadow: var(--bg-shadow-hover);
    --bg-border: var(--bg-border-hover);
  }

  /// Square icon div:
  .iconSquare {
    position: fixed;
    z-index: 10;
    top: 0;
    width: var(--header-height);
    height: var(--header-height);
    line-height: var(--header-height);
    font-size: calc(var(--header-height) / 3 + 0.25rem);
    text-align: center;
    background: var(--bg-icon);
    border-bottom: var(--border-width) solid var(--bg-border);
    @media (orientation: portrait) {
      &.activePortrait {
        z-index: 100;
      }
    }
    @media (orientation: landscape) {
      &.activeLandscape {
        z-index: 100;
      }
    }
    &.left {
      border-right: var(--border-width) solid var(--bg-border);
      left: 0;
      color: var(--fg-icon);
    }
    &.right {
      border-left: var(--border-width) solid var(--bg-border);
      right: 0;
      color: var(--fg-icon);
    }
  }

  /// Small strip below icon to the side of the screen:
  .sidestrip {
    position: absolute;
    z-index: 5;
    top: 0;
    height: 100vh; // Fix chrome mobile bug due to address bar
    width: var(--sidestrip-width);
    background: var(--bg-icon);
    box-shadow: var(--shadow) var(--bg-shadow);

    transition-property: opacity;
    opacity: 1;
    transition-delay: var(--transition-duration);
    @media (orientation: portrait) {
      &.activePortrait {
        z-index: 99;
        opacity: 0;
        transition-delay: 0s;
      }
    }
    @media (orientation: landscape) {
      &.activeLandscape {
        z-index: 99;
        opacity: 0;
        transition-delay: 0s;
      }
    }

    &.left {
      left: 0;
      border-right: var(--sidestrip-border-width) solid var(--bg-border);
    }
    &.right {
      right: 0;
      border-left: var(--sidestrip-border-width) solid var(--bg-border);
    }
    &.sidestripHidden {
      border-color: var(--bg-main-content);
      background: var(--bg-main-content);
      box-shadow: none;
    }
  }

  /// This class is a simple cosmetic touch that covers up the border between
  /// .iconSquare and .sidestrip, so it appears as one whole:
  .sidestripPatch {
    position: absolute;
    z-index: 15;
    top: calc(var(--header-height) * 3/4);
    bottom: 0;
    width: var(--sidestrip-width);
    background: var(--bg-icon);
    &.sidestripHidden {
      background: transparent;
    }

    transition-property: opacity;
    opacity: 1;
    transition-delay: var(--transition-duration);
    @media (orientation: portrait) {
      &.activePortrait {
        opacity: 0;
        transition-delay: 0s;
      }
    }
    @media (orientation: landscape) {
      &.activeLandscape {
        opacity: 0;
        transition-delay: 0s;
      }
    }
    &.left {
      left: 0;
    }
    &.right {
      right: 0;
    }
  }
}

.header {
  position: relative;
  height: var(--header-height);
  color: var(--fg-header);
  background: var(--bg-header);
  border-bottom: var(--border-width) solid var(--bg-border);
  &.left {
    float: right;
    width: calc(100% - var(--header-height));
  }
  &.right {
    float: left;
    width: calc(100% - var(--header-height));
  }

  > h1 {
    margin: 0;
    height: 100%; // Required to prevent overflow!
    line-height: calc(var(--header-height) - var(--border-width)); // Vertical center
    text-align: center; // Horizontal center
    font-size: var(--header-font-size);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    &.main { // Make main h2 offset adaptive to sidebar status:
      position: absolute;
      left: calc(var(--header-height) - var(--sidestrip-width));
      right: calc(var(--header-height) - var(--sidestrip-width));
      @media (orientation: landscape) {
        &.leftActive {
          left: 0;
        }
        &.rightActive {
          right: 0;
        }
      }
      transition: left var(--transition-duration), right var(--transition-duration);
    }
  }
}

.content {
  &.main {
    padding: var(--padding-content-main);
  }
  &.left {
    background: var(--bg-content);
  }
  &.right {
    background: var(--bg-content);
    direction: rtl;
    > div {
      direction: ltr;
    }
  }

  // Without border-box, the left/right padding is added
  // to the 100% width, resulting in overflowing content!
  box-sizing: border-box;
  height: calc(100vh - var(--header-height));
  padding: var(--padding-content-sidebars);
  overflow: auto;
  clear: both;
  color: var(--fg-content);

  // Scrollbar styling:
  &::-webkit-scrollbar {
    width: 0.6rem;
    background: transparent;
  }
  &::-webkit-scrollbar-thumb {
    background: var(--bg-scrollbar);
    border-radius: 0.6rem;
  } // Hide overflowing sidebar scrollbars on Mac Firefox:
  scrollbar-width: var(--scrollbar-width);
}
*/